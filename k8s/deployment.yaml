apiVersion: apps/v1
kind: Deployment
metadata:
  name: plant-api
  namespace: default
  labels:
    app: plant-api
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: plant-api
  template:
    metadata:
      labels:
        app: plant-api
        version: v1
    spec:
      containers:
      - name: plant-api
        image: plant-classification-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: plant-api-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: plant-api-config
              key: API_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: plant-api-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: plant-api-service
  namespace: default
  labels:
    app: plant-api
spec:
  type: LoadBalancer
  selector:
    app: plant-api
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8000
    nodePort: 30080
  sessionAffinity: None
